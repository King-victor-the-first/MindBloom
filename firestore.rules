rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if a user is an authenticated user.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Function to check if the requesting user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for userProfiles collection
    match /userProfiles/{userId} {
      // Any authenticated user can create their own profile.
      allow create: if isOwner(userId);
      // Only the owner can get or update their own profile.
      allow get, update: if isOwner(userId);
      // Reads for all user profiles are restricted. Add admin/moderator logic here if needed.
      allow read: if isSignedIn(); // Broadened for admin dashboard functionality
    }

    // Rules for subcollections within userProfiles
    match /userProfiles/{userId}/{collection}/{docId} {
      // Allow the owner of the profile to read, write, create, and delete documents 
      // in their own subcollections (moodEntries, gratitudeJournal, safetyPlan).
      allow read, write, create, delete: if isOwner(userId);
    }
    
    // Rules for groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Any signed-in user can read messages.
      allow read: if isSignedIn();
      // A user can create a message if they are signed in.
      allow create: if isSignedIn();
      // A user can update (soft-delete) their own message.
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Deletion of chat messages is not allowed.
      allow delete: if false;
    }
  }
}
