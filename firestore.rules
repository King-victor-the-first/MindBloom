
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a moderator
    function isModerator(userId) {
      return get(/databases/$(database)/documents/userProfiles/$(userId)).data.isModerator == true;
    }

    // Rules for the userProfiles collection
    match /userProfiles/{userId} {
      // Any authenticated user can create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can read or update their own profile.
      // A moderator can read or update any profile.
      allow read, update: if request.auth != null && (request.auth.uid == userId || isModerator(request.auth.uid));

      // A moderator can delete any user profile.
      allow delete: if request.auth != null && isModerator(request.auth.uid);

      // Moderators can list all user profiles for the admin dashboard.
      allow list: if request.auth != null && isModerator(request.auth.uid);

      // Rules for the moodEntries subcollection
      match /moodEntries/{entryId} {
        // A user can create, read, update, and delete their own mood entries.
        // They can also list their own entries for the mood chart.
        allow read, write, list: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Rules for the groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read/list all messages.
      allow read, list: if request.auth != null;
      // Any authenticated user can create a message.
      allow create: if request.auth != null;
      // Only moderators can update or delete messages.
      allow update, delete: if request.auth != null && isModerator(request.auth.uid);
    }
  }
}
