rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    //
    // Functions
    //

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return request.auth.uid == 'BzsBHchaPEYuHwuhqlMiwRaMbBJ2';
    }

    function isRequestingUser(userId) {
      return request.auth.uid == userId;
    }

    function isExistingUser(userId) {
      return exists(/databases/$(database)/documents/userProfiles/$(userId));
    }

    function userIsModerator(userId) {
      let user = get(/databases/$(database)/documents/userProfiles/$(userId));
      return user.data.isModerator == true;
    }

    //
    // Rules
    //

    match /userProfiles/{userId} {
      allow read, write: if isRequestingUser(userId) || isSuperAdmin();
    }

    match /userProfiles/{userId}/moodEntries/{entryId} {
      allow read, write: if isRequestingUser(userId);
    }

    match /groupChatMessages/{messageId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserAuthenticated();
      allow update, delete: if isUserAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        userIsModerator(request.auth.uid)
      );
    }
  }
}
