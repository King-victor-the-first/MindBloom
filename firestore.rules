rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the userProfiles collection
    match /userProfiles/{userId} {
      // A user can create their own profile.
      // A user can read their own profile.
      // A user can update their own profile.
      // Moderators can read any user's profile for administrative purposes.
      allow read, update: if isOwner(userId) || get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.isModerator == true;
      allow create: if isOwner(userId);

      // Rules for the moodEntries subcollection
      match /moodEntries/{entryId} {
        // Only the owner can create, read, update, or delete their own mood entries.
        allow read, write: if isOwner(userId);
      }

      // Rules for the gratitudeJournal subcollection
      match /gratitudeJournal/{journalId} {
        // Only the owner can create, read, update, or delete their own journal entries.
        allow read, write: if isOwner(userId);
      }
      
      // Rules for the safetyPlan subcollection
      match /safetyPlan/{planId} {
        // Only the owner can create, read, update, or delete their own safety plan.
        allow read, write: if isOwner(userId);
      }
    }

    // Rules for the groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read messages in the group chat.
      allow read: if request.auth != null;
      
      // An authenticated user can create a message.
      // A user can only "delete" (update to a deleted state) their own messages.
      // A moderator can "delete" (update to a deleted state) anyone's message.
      allow create: if request.auth != null;
      allow update: if (isOwner(request.resource.data.userId) && resource.data.isDeleted == false) || get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.isModerator == true;
      
      // Direct deletion of messages is disallowed to maintain a "soft delete" structure.
      allow delete: if false;
    }
  }
}
