rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a moderator.
    // It reads the 'isModerator' flag from the user's own profile.
    function isModerator(userId) {
      return get(/databases/$(database)/documents/userProfiles/$(userId)).data.isModerator == true;
    }

    // Rules for the userProfiles collection
    match /userProfiles/{userId} {
      // Allow a user to read and write their own profile.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow moderators to read, write, and list all user profiles.
      // 'list' is crucial for the admin dashboard to display all users.
      allow read, write, list: if request.auth != null && isModerator(request.auth.uid);
    }

    // Rules for the moodEntries subcollection
    match /userProfiles/{userId}/moodEntries/{entryId} {
      // Allow a user to perform any action on their own mood entries.
      // This includes create, get, list, update, delete.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for the groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Allow any authenticated user to read all messages.
      allow read: if request.auth != null;
      // Allow any authenticated user to create messages.
      // Further validation (e.g., message content) would be handled by the AI moderation flow.
      allow create: if request.auth != null;
    }
  }
}
