
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for user profiles
    match /userProfiles/{userId} {
      // Users can read and update their own profile
      allow read, update: if isOwner(userId);
      // Deny creating or deleting profiles directly via client
      allow create, delete: if false;

      // Rules for Mood Entries subcollection
      match /moodEntries/{entryId} {
        // Users can read and write (create, update) their own mood entries
        allow read, write: if isOwner(userId);
      }
      
      // Rules for Gratitude Journal subcollection
      match /gratitudeJournal/{entryDate} {
         // Users can read and write their own gratitude entries
        allow read, write: if isOwner(userId);
      }

      // Rules for Safety Plan subcollection
      match /safetyPlan/{planId} {
        // Users can read and write their own safety plan
        allow read, write: if isOwner(userId);
      }
    }

    // Rules for Group Chat
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read chat messages
      allow read: if request.auth != null;
      // Any authenticated user can create a message
      allow create: if request.auth != null;
      // Only the user who created the message can "delete" it (soft delete via update)
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
      // Disallow hard deletes from the client
      allow delete: if false;
    }
  }
}
