
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user is a moderator
    function isModerator() {
      return get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.isModerator == true;
    }

    // User Profiles
    match /userProfiles/{userId} {
      // Users can create their own profile
      allow create: if isAuthenticated() && isOwner(userId);
      // Users can read their own profile. Moderators can read any profile.
      allow get: if isAuthenticated() && (isOwner(userId) || isModerator());
      // Users can update their own profile
      allow update: if isAuthenticated() && isOwner(userId);
      // Only moderators can delete users (for now, this can be tightened)
      allow delete: if isAuthenticated() && isModerator();
    }

    // Mood Entries subcollection
    match /userProfiles/{userId}/moodEntries/{entryId} {
      // Users can read and write to their own mood entries subcollection
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Gratitude Journal subcollection
    match /userProfiles/{userId}/gratitudeJournal/{journalId} {
        // Users can read and write to their own gratitude journal
        allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Safety Plan subcollection
    match /userProfiles/{userId}/safetyPlan/{planId} {
        // Users can read and write their own safety plan
        allow read, write: if isAuthenticated() && isOwner(userId);
    }

    // Group Chat Messages
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read chat messages
      allow read: if isAuthenticated();
      // Any authenticated user can create a message
      allow create: if isAuthenticated();
      // Users can only "delete" (update) their own messages. Moderators can delete any message.
      allow update: if isAuthenticated() && (isOwner(resource.data.userId) || isModerator());
      // Disallow direct deletion of messages. Deletion should be a soft delete via update.
      allow delete: if false;
    }
  }
}
