rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the userProfiles collection
    match /userProfiles/{userId} {
      // A user can create their own profile.
      // Anyone can read a user profile (e.g., for names in chat), but only the owner can write/update.
      allow read: if isSignedIn();
      allow create, update, delete: if isOwner(userId);

      // Rules for the moodEntries subcollection
      match /moodEntries/{entryId} {
        // Only the owner of the user profile can manage their mood entries.
        allow read, write: if isOwner(userId);
      }

      // Rules for the gratitudeJournal subcollection
      match /gratitudeJournal/{journalId} {
        // Only the owner of the user profile can manage their gratitude entries.
        allow read, write: if isOwner(userId);
      }

      // Rules for the safetyPlan subcollection
      match /safetyPlan/{planId} {
        // Only the owner of the user profile can manage their safety plan.
        allow read, write: if isOwner(userId);
      }
    }

    // Rules for the groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read chat messages.
      allow read: if isSignedIn();
      // An authenticated user can create a message.
      allow create: if isSignedIn()
                    && request.resource.data.userId == request.auth.uid; // Ensure they are the author
      // A user can only update their own message (for deletion)
      allow update: if isOwner(resource.data.userId);
      // Deletion of chat messages is not allowed directly. They should be updated with an `isDeleted` flag.
      allow delete: if false;
    }
  }
}
