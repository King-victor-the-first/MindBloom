
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the userProfiles collection
    match /userProfiles/{userId} {
      // A user can only read and write to their own profile
      allow read, update: if isAuthenticated() && isOwner(userId);
      // A user can create their own profile
      allow create: if isAuthenticated();

      // Rules for the moodEntries subcollection
      match /moodEntries/{entryId} {
        // A user can perform all operations on their own mood entries
        allow read, write, create, delete: if isAuthenticated() && isOwner(userId);
      }

      // Rules for the gratitudeJournal subcollection
      match /gratitudeJournal/{journalId} {
        // A user can perform all operations on their own gratitude journal entries
        allow read, write, create, delete: if isAuthenticated() && isOwner(userId);
      }
      
      // Rules for the safetyPlan subcollection
      match /safetyPlan/{planId} {
        // A user can perform all operations on their own safety plan
        allow read, write, create, delete: if isAuthenticated() && isOwner(userId);
      }
    }

    // Rules for the groupChatMessages collection
    match /groupChatMessages/{messageId} {
      // Any authenticated user can read messages
      allow read: if isAuthenticated();
      // An authenticated user can create messages, and can only update/delete their own messages
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}
